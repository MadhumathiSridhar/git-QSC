<Window x:Class="QSC_Test_Automation.Core_DateAndTime"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QSC_Test_Automation"
        mc:Ignorable="d"
        Title="Edit Core Date/Time" SizeToContent="Height" Height="Auto" Width="360" Background="#FF9CAAC1" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Icon="/QSC_Test_Automation;component/Images/Final_QAT_Icon.ico" >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/PresentationFramework.Royale;V3.0.0.0;31bf3856ad364e35;component\themes\royale.normalcolor.xaml" />
                <ResourceDictionary Source="TreeViewDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <!--<GroupBox Header="Set Date and Time" BorderThickness="1" BorderBrush="Black" Margin="5,5,5,5" >-->
        <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="150"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition Height="150" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>
        <Label Content="Date and Time" HorizontalAlignment="Left" VerticalAlignment="Top"/>
        <Calendar Grid.Row="1" Margin="5,2,0,0" VerticalAlignment="Top" Grid.Column="0" Grid.RowSpan="2" HorizontalAlignment="Left" GotMouseCapture="CalendarDate_GotMouseCapture" DisplayDate="{Binding CalendarDisplayDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedDate="{Binding CalendarSelectedDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
       <Grid Grid.Column="1" Grid.Row="1">
                <Image Source="images/backGround.png" ></Image>
            <Rectangle Margin="0,15,0,75" Stroke="LightGreen" Width="1">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="0" CenterY="60" Angle="{Binding ClockSecondsAngle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Rectangle.RenderTransform>
            </Rectangle>
            
            <Rectangle Margin="0,30,0,75" Stroke="White" Width="1">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="0" CenterY="45" Angle="{Binding ClockMinuteAngle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Rectangle.RenderTransform>
            </Rectangle>
            
            <Rectangle Margin="0,45,0,75" Stroke="LightYellow" Width="1">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="0" CenterY="30" Angle="{Binding ClockHourAngle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Rectangle.RenderTransform>
            </Rectangle>
            <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center" Width="5" Height="5" Fill="Wheat">
                
            </Ellipse>
        </Grid>
        <TextBox Name="Time_Selection" HorizontalAlignment="Center" Grid.Row="2"  Grid.Column="1" Width="95" Height="22" Keyboard.PreviewKeyDown="Time_Selection_KeyDown" PreviewTextInput="Time_Selection_PreviewTextInput" PreviewMouseLeftButtonDown="Time_Selection_MouseDown" PreviewMouseMove="Time_Selection_PreviewMouseMove" Text="{Binding CoreCurrentTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ContextMenu="{x:Null}" />
        <Button Name="Up" Content="+" HorizontalAlignment="Center" Grid.Row="2" Grid.Column="1" Margin="105,1,29,11" Width="16" Click="UpDown_Click" Focusable="True" Height="10" Background="Transparent"  >
            <Button.Template>
                <ControlTemplate>
                    <Border HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <Image Source="Images/up.png" Width="18" Height="10" />
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button Name="Down" Content="-" HorizontalAlignment="Center" Grid.Row="2" Grid.Column="1" Margin="105,11,29,1" Width="16" Click="UpDown_Click" Focusable="True" Height="10" Background="Transparent">
            <Button.Template>
                <ControlTemplate>
                    <Border HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <Image Source="Images/down.png" Width="18" Height="10" />
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Label Content="Time Zone" HorizontalAlignment="Left" VerticalAlignment="Top"  Grid.Row="3" Grid.Column="0" Margin="0,20,0,0"/>
        <ComboBox IsTextSearchEnabled="False" HorizontalAlignment="Left" VerticalAlignment="Top" Width="320" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4" Margin="8,0,0,0" ItemsSource="{Binding TimeZoneItemsource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding TimeZoneSelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <Grid Height="Auto" Width="Auto" ShowGridLines="False">
                        <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding DisplayText}"/>
                    </Grid>
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <ComboBox.ItemContainerStyle>
                <Style TargetType="ComboBoxItem">
                    <!--<Setter Property="Foreground" Value="Black"/>-->
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsHeader}" Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                            <Setter Property="FontWeight" Value="DemiBold"/>
                            <Setter Property="Background" Value="LightGray"/>                            
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsHeader}" Value="False">
                            <Setter Property="Margin" Value="10,0,0,0"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <Grid Height="Auto" Width="Auto" ShowGridLines="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="100"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding DisplayText}"/>
                                    <TextBlock Grid.Column="1" Text="{Binding Comments}"/>
                                </Grid>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ComboBox.ItemContainerStyle>
        </ComboBox>
        <CheckBox Content="Enable NTP" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Column="0" Grid.Row="5" Margin="5,12,0,0" IsChecked="{Binding NTPChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <ListView Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="6" Height="75" Margin="5,5,5,5" SelectionMode="Single" AllowDrop="True" ItemsSource="{Binding PoolListViewItems, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding PoolListSelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding PoolListSelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding NTPListVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
            <ListView.Style>
                <Style TargetType="{x:Type ListView}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Items, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <VisualBrush Stretch="None">
                                        <VisualBrush.Visual>
                                            <TextBlock Text="Drag Test Plan from LHS and drop here" FontFamily="Consolas" FontSize="16"/>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.Style>

            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF3399FF"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="White"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#FF3399FF"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White"/>
                    </Style.Resources>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
        <Button ToolTip="Add NTP Server" Content="+" Grid.Row="7" Grid.Column="1"  Margin="0,2,40,2"  HorizontalAlignment="Right"  VerticalAlignment="Top" Foreground="White" Focusable="False" Style="{StaticResource ButtonStyle10}" Visibility="{Binding PoolAddVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Click="Btn_PoolPlus_Click"/>
        <Button ToolTip="Remove selcted NTP Server" Content="-" Grid.Row="7" Grid.Column="1"  Margin="0,2,15,0" HorizontalAlignment="Right"  VerticalAlignment="Top" Foreground="White" Focusable="False" Style="{StaticResource ButtonStyle10}" Visibility="{Binding PoolRemoveVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Click="Btn_PoolMinus_Click"/>
        <Button IsEnabled="{Binding SaveButtonIsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsDefault="True" Content="Save" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Row="8" Foreground="White" Focusable="False" Style="{StaticResource ButtonStyle3}"  Margin="0,10,90,0" Click="btn_DateTimeSave_Click"/>
        <Button IsCancel="True" Grid.Row="8" Content="Cancel" HorizontalAlignment="Right" VerticalAlignment="Top" Foreground="White" Focusable="False" Style="{StaticResource ButtonStyle3}" Margin="0,10,10,0" Grid.Column="1"/>
    </Grid>
    <!--</GroupBox>-->
</Window>
