<Window x:Class="QSC_Test_Automation.QRCM_Treeview"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:QSC_Test_Automation"
        mc:Ignorable="d"
        Title="QRCM_Treeview" Height="Auto" Width="500" MinWidth="500" MinHeight="300" WindowStartupLocation="CenterScreen" ResizeMode="CanResize" Icon="Images/Final_QAT_Icon.ico"  Foreground="Black" Background="#FF405579" >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/PresentationFramework.Royale;V3.0.0.0;31bf3856ad364e35;component\themes\royale.normalcolor.xaml" />
                <ResourceDictionary Source="TreeViewDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <HierarchicalDataTemplate x:Key="TreeViewCheckBoxDataTemplate" 
                                      ItemsSource="{Binding Children, Mode=OneWay}">
                <StackPanel Orientation="Horizontal">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <CheckBox Focusable="False"
                              Visibility="{Binding IsCheckedVisibility}"
                              IsChecked="{Binding IsChecked}"
                              VerticalAlignment="Center" Click="treeview_CheckBox_Click"  HorizontalAlignment="Left" Grid.Column="0"/>
                        <Image Focusable="False" 
                               Visibility="{Binding IsImageVisibility,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                               Source="{Binding UpdatestatusInfo,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Height="15" Width="15"
                                x:Name="UpdateExecutestatusInfo" HorizontalAlignment="Right"  Grid.Column="1" Margin="5,2,2,2" />
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Column="2">
                            <ContentPresenter Content="{Binding ItemTextBox, Mode=OneWay}" Margin="2.0" />
                            <ContentPresenter Content="{Binding ItemTextBoxJsonValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ItemTextBoxJsonVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="2.0"/>
                            <Label Content=" Upper Limit:" x:Name="lbl_Uplimit" HorizontalAlignment="Left" Margin="-4,0,-5,0" Visibility="{Binding ItemTextBoxJsonUpperLowerVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox Text="{Binding JsonUppervalue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ItemTextBoxJsonUpperLowerVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="30" PreviewTextInput="JSONlimitTxtbox_PreviewTextInput" PreviewKeyDown="JSONlimitTxtbox_PreviewKeyDown" Margin="2.0" />
                            <Label Content=" Lower Limit:" x:Name="lbl_Lowlimit" HorizontalAlignment="Left" Margin="-4,0,-5,0" Visibility="{Binding ItemTextBoxJsonUpperLowerVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox Text="{Binding JsonLowervalue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ItemTextBoxJsonUpperLowerVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="30" PreviewTextInput="JSONlimitTxtbox_PreviewTextInput" PreviewKeyDown="JSONlimitTxtbox_PreviewKeyDown" Margin="2.0" />
                            <!--<Grid Background="White">
                                <TextBox Text="{Binding JsonUppervalue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ItemTextBoxJsonUpperLowerVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="60" PreviewTextInput="JSONlimitTxtbox_PreviewTextInput" PreviewKeyDown="JSONlimitTxtbox_PreviewKeyDown" Margin="2.0">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <VisualBrush Stretch="None">
                                                                <VisualBrush.Visual>
                                                                    <TextBlock Text="Upper limit" Foreground="Black"  FontStyle="Italic" TextAlignment="Left" Width="70" />
                                                                </VisualBrush.Visual>
                                                            </VisualBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}" Value="True">
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <VisualBrush Stretch="None">
                                                                <VisualBrush.Visual>
                                                                    <TextBlock Text="" Foreground="Black"  FontStyle="Italic" TextAlignment="Right" Width="70" />
                                                                </VisualBrush.Visual>
                                                            </VisualBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <Trigger Property="Validation.HasError" Value="True">
                                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                                                </Trigger>

                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>-->
                            <!--<Grid Background="White">
                                <TextBox Text="{Binding JsonLowervalue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ItemTextBoxJsonUpperLowerVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="60" PreviewTextInput="JSONlimitTxtbox_PreviewTextInput" PreviewKeyDown="JSONlimitTxtbox_PreviewKeyDown" Margin="2.0">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <VisualBrush Stretch="None">
                                                                <VisualBrush.Visual>
                                                                    <TextBlock Text="Lower limit" Foreground="Black"  FontStyle="Italic" TextAlignment="Left" Width="70" />
                                                                </VisualBrush.Visual>
                                                            </VisualBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}" Value="True">
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <VisualBrush Stretch="None">
                                                                <VisualBrush.Visual>
                                                                    <TextBlock Text="" Foreground="Black"  FontStyle="Italic" TextAlignment="Right" Width="70" />
                                                                </VisualBrush.Visual>
                                                            </VisualBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <Trigger Property="Validation.HasError" Value="True">
                                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                                                </Trigger>

                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Grid>-->
                            <Button Name="AddArray" Content="+" Visibility="{Binding PlusBtnJsonVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="25" HorizontalContentAlignment="Center"  VerticalContentAlignment="Center" Margin="2.0" Click="AddArray_Click" ></Button>
                            <Button Name="MinusArray" Content="-" Visibility="{Binding MinusBtnJsonVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="25" Margin="2.0" Click="DeleteArray_Click" ></Button>

                        </StackPanel>
                    </Grid>
                </StackPanel>
            </HierarchicalDataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="31"/>
            <RowDefinition Height="*" />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>
        <!--<Grid.LayoutTransform>
            <ScaleTransform CenterX="0" CenterY="0" ScaleX="{Binding ElementName=RunnerSlider, Path=Value}" ScaleY="{Binding ElementName=RunnerSlider, Path=Value}"/>
        </Grid.LayoutTransform>-->
        <!--<TreeView Name="TreeViewDesigner" Grid.Row="2" FontWeight="SemiBold" Background="#FFF9F5F2" ItemsSource="{Binding}"  ItemContainerStyle ="{StaticResource TreeViewItemStyleMultiSelect}" ItemTemplate="{StaticResource TreeViewRenameDataTemplate}" PreviewMouseDown="TreeViewDesigner_PreviewMouseDownUp" PreviewMouseUp="TreeViewDesigner_PreviewMouseDownUp" MouseMove="TreeViewDesigner_MouseMove" PreviewKeyDown="TreeViewDesigner_PreviewKeyDownUp" PreviewKeyUp="TreeViewDesigner_PreviewKeyDownUp" AllowDrop="True" Drop="TreeViewDesigner_Drop" PreviewTextInput="Treeviewdesigner_previewtextinput" LostKeyboardFocus="Treeviewdesigner_LostFocus"  GiveFeedback="TreeViewDesigner_GiveFeedback" SelectedItemChanged="TreeViewDesigner_SelectedItemChanged" KeyDown="TreeViewDesigner_keyDown"   VirtualizingStackPanel.IsVirtualizing="True"  VirtualizingStackPanel.VirtualizationMode="Standard" ScrollViewer.CanContentScroll="True" TreeView.SnapsToDevicePixels="True" VirtualizingStackPanel.ScrollUnit="Pixel" >-->
        <StackPanel Width="482" HorizontalAlignment="Left" VerticalAlignment="Center">
            <TextBlock HorizontalAlignment="Left" Name="DynamicPairedTextblock" Margin="13,2,0,0" Foreground="WhiteSmoke" TextWrapping="Wrap" Text="Paired device name example: (Paired-Core-1) (Paired-NV-32-H-1)  Where Core-1 and NV-32-H-1 are device name in design" FontSize="11"  FontWeight="DemiBold" Grid.Row="0" Height="30" Width="329" />
        </StackPanel>
        <TreeView Margin="10" Name="treeViewJson" Grid.Row="1" FontWeight="SemiBold" Background="#FFF9F5F2" ItemsSource="{Binding}" ItemContainerStyle ="{StaticResource TreeViewItemStyleMultiSelect}" ItemTemplate="{StaticResource TreeViewCheckBoxDataTemplate}" AllowDrop="True" TreeView.SnapsToDevicePixels="True" VirtualizingStackPanel.ScrollUnit="Pixel" VirtualizingStackPanel.IsVirtualizing="True"  VirtualizingStackPanel.VirtualizationMode="Recycling"  ScrollViewer.IsDeferredScrollingEnabled="False">
            <TreeView.ItemsPanel>
                <ItemsPanelTemplate>
                    <local:MyVirtualizingStackPanel IsItemsHost="True" CanVerticallyScroll="True"/>
                </ItemsPanelTemplate>
            </TreeView.ItemsPanel>
        </TreeView>
        <Button Content="OK" Name="QRCMSave" Grid.Row="2" Margin="0,10,0,10" Style="{StaticResource ButtonStyle3}" Foreground="White" Focusable="False" Click="QRCMSave_Click"/>

    </Grid>
</Window>
